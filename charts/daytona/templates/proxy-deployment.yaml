apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: "{{ include "daytona.namespace" . }}"
  name: {{ include "daytona.fullname" . }}-proxy
  labels:
    {{- include "daytona.labels" . | nindent 4 }}
    app.kubernetes.io/component: proxy
  {{- with .Values.services.proxy.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.services.proxy.replicaCount }}
  selector:
    matchLabels:
      {{- include "daytona.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: proxy
  template:
    metadata:
      {{- with .Values.services.proxy.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "daytona.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: proxy
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "daytona.serviceAccountName" (dict "Values" .Values "service" "proxy" "Chart" .Chart "Release" .Release) }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: proxy
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.services.proxy.image.registry }}/{{ .Values.services.proxy.image.repository }}:{{ .Values.services.proxy.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.services.proxy.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            {{- range $key, $value := .Values.services.proxy.env }}
            {{- if and (eq $key "REDIS_HOST") (eq $value "") }}
            {{- else }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- if eq .Values.services.proxy.env.REDIS_HOST "" }}
            - name: REDIS_HOST
              value: {{ printf "%s-redis-master" .Release.Name | quote }}
            {{- end }}
            {{- if .Values.redis.auth.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-redis" .Release.Name }}
                  key: redis-password
            {{- end }}
            - name: DAYTONA_API_URL
              value: http://{{ include "daytona.fullname" . }}-api:{{ .Values.services.api.env.PORT }}/api
          resources:
            {{- toYaml .Values.services.proxy.resources | nindent 12 }}
      {{- with .Values.services.proxy.nodeSelector | default .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.proxy.affinity | default .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.proxy.tolerations | default .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
