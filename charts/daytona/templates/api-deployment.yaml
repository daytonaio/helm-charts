apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ include "daytona.namespace" . }}
  name: {{ include "daytona.fullname" . }}-api
  labels:
    {{- include "daytona.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
  {{- with .Values.services.api.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.services.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "daytona.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
      {{- with .Values.services.api.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "daytona.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "daytona.serviceAccountName" (dict "Values" .Values "service" "api" "Chart" .Chart "Release" .Release) }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            privileged: true
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.services.api.image.registry }}/{{ .Values.services.api.image.repository }}:{{ .Values.services.api.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.services.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            {{- range $key, $value := .Values.services.api.env }}
            {{- if and (eq $key "REDIS_HOST") (eq $value "") }}
            {{- else if eq $key "DB_PASSWORD" }}
            {{- else }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- if eq .Values.services.api.env.REDIS_HOST "" }}
            - name: REDIS_HOST
              value: {{ printf "%s-redis-master" .Release.Name | quote }}
            {{- end }}
            {{- if .Values.redis.auth.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-redis" .Release.Name }}
                  key: redis-password
            {{- end }}
            {{- if not (hasKey .Values.services.api.env "DB_PASSWORD") }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "daytona.secretName" . }}
                  key: database-password
            {{- end }}
            - name: PROXY_DOMAIN
              value: {{ .Values.services.proxy.env.PROXY_DOMAIN | quote }}
            - name: PROXY_PROTOCOL
              value: {{ .Values.services.proxy.env.PROXY_PROTOCOL | quote }}
            - name: PROXY_API_KEY
              value: {{ .Values.services.proxy.env.PROXY_API_KEY | quote }}
            - name: PROXY_TEMPLATE_URL
              value: "{{ .Values.services.proxy.env.PROXY_PROTOCOL }}://{{`{{PORT}}`}}-{{`{{sandboxId}}`}}.{{ .Values.services.proxy.env.PROXY_DOMAIN }}"
            - name: SSH_GATEWAY_COMMAND
              value: "ssh -p {{ .Values.services.sshGateway.env.SSH_GATEWAY_PORT }} {{`{{TOKEN}}`}}@{{ .Values.services.sshGateway.env.SSH_GATEWAY_HOST }}"
            - name: SSH_GATEWAY_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "daytona.secretName" . }}-ssh
                  key: SSH_PRIVATE_PUB_KEY
            - name: SSH_GATEWAY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "daytona.secretName" . }}-ssh
                  key: API_KEY
          resources:
            {{- toYaml .Values.services.api.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-run
              mountPath: /var/run
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-run
          emptyDir: {}
      {{- with .Values.services.api.nodeSelector | default .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.api.affinity | default .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.api.tolerations | default .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
